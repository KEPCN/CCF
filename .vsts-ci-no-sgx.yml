trigger:
  batch: true
  branches:
    include:
      - "ci/*"
  paths:
    exclude:
      - 'README.md'
      - 'CCF-TECHNICAL-REPORT.pdf'
      - 'Dockerfile'
      - 'Doxyfile'
      - 'THIRD_PARTY_NOTICES.txt'
      - 'getting_started/'
      - 'sphinx/'
      - '.circleci/'
      - '.github/'
      - '.vsts-gh-pages.yml'
      - 'LICENSE'

pr:
  autoCancel: true
  branches:
    include:
      - master
  paths:
    include:
      - '*'
    exclude:
      - 'README.md'
      - 'CCF-TECHNICAL-REPORT.pdf'
      - 'Dockerfile'
      - 'Doxyfile'
      - 'THIRD_PARTY_NOTICES.txt'
      - 'getting_started/'
      - 'sphinx/'
      - '.circleci/'
      - '.github/'
      - '.vsts-gh-pages.yml'
      - 'LICENSE'

schedules:
- cron: "0 3 * * Mon-Fri"
  displayName: Daily morning build
  branches:
    include:
    - master
  always: true

jobs:
- job : static_checks
  pool:
    vmImage: 'ubuntu-16.04'
  container: ccfciteam/ccf-ci-18.04:latest
  steps:
    - checkout: self
      clean: true
      submodules: true

    - script: find . -regex ".*\.sh$" | xargs shellcheck -s bash -e SC2044,SC2002,SC1091
      displayName: 'Shell Check'

    - script: python3.7 notice-check.py
      displayName: 'Check copyright notices'

    - script: ./check-format.sh src
      displayName: 'Check C++ code format'

    - script: |
        python3.7 -m venv env
        source env/bin/activate
        pip install black
        black --check sphinx/ tests/ notice-check.py
      displayName: 'Check Python code format'

- job: Coverage
  pool:
    vmImage: 'ubuntu-16.04'
  container: ccfciteam/ccf-ci-18.04:latest
  dependsOn:
    - static_checks
  steps:
    - checkout: self
      clean: true
      submodules: true

    - template: .vsts-ci-templates/build.yml
      parameters:
        cmake_args: ' -DTARGET=virtual -DBUILD_SMALLBANK=OFF -DCOVERAGE=ON'

    - template: .vsts-ci-templates/test.yml
      parameters:
        ctest_filter: '-R schema_tests'
        suite_name_suffix: 'coverage'

    - script: |
        cat /proc/cpuinfo
      displayName: /proc/cpuinfo

    - script: |
        cat workspace/schema_tests_0/out
        cat workspace/schema_tests_0/err
        cat workspace/schema_tests_1/out
        cat workspace/schema_tests_1/err
      displayName: Cat CCF logs
      workingDirectory: build

    - task: PublishPipelineArtifact@0
      displayName: Publish CCF logs
      inputs:
        artifactName: failing_test_logs
        targetPath: build/workspace

- job: SAN
  pool:
    vmImage: 'ubuntu-16.04'
  container: ccfciteam/ccf-ci-18.04:latest
  dependsOn:
    - static_checks
  steps:
    - checkout: self
      clean: true
      submodules: true
      
    - template: .vsts-ci-templates/build.yml
      parameters:
        cmake_args: ' -DTARGET=virtual -DBUILD_SMALLBANK=OFF -DSAN=ON'

    - template: .vsts-ci-templates/test.yml
      parameters:
        suite_name_suffix: 'san'